package me.sevj6.listener.patches;

import me.sevj6.Instance;
import me.sevj6.util.fileutil.Setting;
import me.txmc.protocolapi.PacketEvent;
import me.txmc.protocolapi.PacketListener;
import net.minecraft.server.v1_12_R1.BlockPosition;
import net.minecraft.server.v1_12_R1.PacketPlayInBlockDig;
import net.minecraft.server.v1_12_R1.PacketPlayOutBlockChange;
import org.bukkit.Location;

import java.lang.reflect.Field;

/**
 * @author SevJ6
 * 8/2/2021
 */

public class NocomExploit implements PacketListener, Instance {

    public static Field blockPos;

    static {
        try {
            NocomExploit.blockPos = PacketPlayOutBlockChange.class.getDeclaredField("a");
            NocomExploit.blockPos.setAccessible(true);
        } catch (Throwable ignored) {
        }
    }

    private final Setting<Boolean> preventNoCom = Setting.getBoolean("nocom.enabled");
    private final Setting<Integer> maxDistS = Setting.getInt("sPacketBlockChange.max_distance");
    private final Setting<Integer> maxDistC = Setting.getInt("cPacketBlockDig.max_distance");

    @Override
    public void incoming(PacketEvent.Incoming event) throws Throwable {
        if (preventNoCom.getValue()) {
            if (event.getPacket() instanceof PacketPlayInBlockDig) {
                PacketPlayInBlockDig packet = (PacketPlayInBlockDig) event.getPacket();
                PacketPlayInBlockDig.EnumPlayerDigType stage = packet.c();
                if (stage.equals(PacketPlayInBlockDig.EnumPlayerDigType.ABORT_DESTROY_BLOCK)
                        || stage.equals(PacketPlayInBlockDig.EnumPlayerDigType.START_DESTROY_BLOCK)
                        || stage.equals(PacketPlayInBlockDig.EnumPlayerDigType.STOP_DESTROY_BLOCK)) {
                    BlockPosition blockPos = packet.a();
                    if (blockPos != null) {
                        Location location = new Location(event.getPlayer().getWorld(), blockPos.getX(), blockPos.getY(), blockPos.getZ());
                        if (location.distance(event.getPlayer().getLocation()) > event.getPlayer().getViewDistance() * maxDistC.getValue())
                            event.setCancelled(true);
                    }
                }
            }
        }
    }

    @Override
    public void outgoing(PacketEvent.Outgoing event) throws Throwable {
        if (preventNoCom.getValue()) {
            if (event.getPacket() instanceof PacketPlayOutBlockChange) {
                PacketPlayOutBlockChange packet = (PacketPlayOutBlockChange) event.getPacket();
                try {
                    BlockPosition pos = (BlockPosition) NocomExploit.blockPos.get(packet);
                    if (pos != null) {
                        Location posLoc = new Location(event.getPlayer().getWorld(), pos.getX(), pos.getY(), pos.getZ());
                        if (posLoc.distance(event.getPlayer().getLocation()) > event.getPlayer().getViewDistance() * maxDistS.getValue()) {
                            event.setCancelled(true);
                        }
                    }
                } catch (Throwable ignored) {
                }
            }
        }
    }
}
